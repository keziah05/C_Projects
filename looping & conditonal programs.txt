Q: print even numbers for 0 to N 

#include<stdio.h>
int main()
{
	int n,i;
	printf("enter n value: ");
	scanf("%d",&n);
	for (i=0;i<=n;i++){
		if(n%2==0){
			printf ("%d\n",i);
		}
	}
	return 0;
}

Q: Factorial of a N

#include<stdio.h>
int main()
{
	int n,i,fact=1;
	printf("n value: ");
	scanf("%d",&n);
	for (i=1;i<=n;i++){
		fact*=i;
	}
	printf("factorial of %d: %d",n,fact);
	return 0;
}

Q: Sum of Digits of a Number

#include <stdio.h>

int main() {
    int num, digit, sum = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    while (num != 0) {
        digit = num % 10;      // Get the last digit
        sum = sum + digit;     // Add it to the sum
        num = num / 10;        // Remove the last digit
    }

    printf("Sum of digits = %d\n", sum);

    return 0;
}

Q: Reverse of Number 

#include <stdio.h>

int main() {
    int num, digit, reverse = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    while (num != 0) {
        digit = num % 10;                 // Get the last digit
        reverse = reverse * 10 + digit;   // Shift digits and add new digit
        num = num / 10;                   // Remove last digit
    }

    printf("Reversed number = %d\n", reverse);

    return 0;
}


Q: Use Switch Case to print the days of the Week

#include <stdio.h>
int main()
{
	int n;
	printf("enter number (1-7): ");
	scanf("%d",&n);
	switch (n){
		case 1:
		printf("Monday");
		break;
		
		case 2:
		printf("Tuesaday");
		break;
		
		case 3:
		printf("Wednesday");
		break;
		
		case 4:
		printf("Thursday");
		break;
		
		case 5:
		printf("Friday");
		break;
		
		case 6:
		printf("Saturday");
		break;
		
		case 7:
		printf("Sunday");
		break;

        default:
		 printf("no valid day");
		
	}
	return 0;
}

Q: Odd-Even using if-else:

#include<stdio.h>
int main(){
	int n;
	printf("enter n value: ");
	scanf("%d",&n);
	if (n%2==0){
		printf("%d is an even number",n);
	}
	else 
	{
		printf("%d is a odd number",n);
	}
	return 0;
}

Q: Multiplication table

#include<stdio.h>
int main()
{
	int n,number=2,i;
	printf("enter n value: ");
	scanf("%d",&n);
	printf("TABLE OF %d\n",n);
	for(i=1;i<=12;i++){
			printf("%dx%d=%d\n",number,i,n*i);
	}
	return 0;

	
}

Q: verify prime number condition

#include<stdio.h>
int main()
{
	int n,i,count=0;
	printf("n value: ");
	scanf("%d",&n);
	for (i=1;i<=n;i++){
		if (n%i==0){
			count ++;
		}
		
	}
	if (count==2){
		printf("%d is a prime number.",n);
	}
	else {
		printf("%d is not a prime number.",n);
	}
	return 0;
}

Q: Palindrome Number (A palindrome number reads the same forward and backward. eg: 121 â†’ Palindrome )

(using while loop)
#include <stdio.h>

int main() {
    int num, original, reversed = 0, digit;

    printf("Enter a number: ");
    scanf("%d", &num);

    original = num;  // Save original number

    // Reverse the number
    while (num != 0) {
        digit = num % 10;
        reversed = reversed * 10 + digit;
        num = num / 10;
    }

    // Compare reversed with original
    if (original == reversed) {
        printf("%d is a Palindrome Number.\n", original);
    } else {
        printf("%d is Not a Palindrome Number.\n", original);
    }

    return 0;
}

(using for loop)
#include <stdio.h>

int main() {
    int num, reversed = 0, digit, original;

    printf("Enter a number: ");
    scanf("%d", &num);

    original = num;

    // Use a for loop to reverse the number
    for (; num != 0; num = num / 10) {
        digit = num % 10;
        reversed = reversed * 10 + digit;
    }

    // Check if palindrome
    if (original == reversed)
        printf("%d is a Palindrome Number.\n", original);
    else
        printf("%d is Not a Palindrome Number.\n", original);

    return 0;
}

(using do while loop)
#include <stdio.h>

int main() {
    int num, reversed = 0, digit, original;

    printf("Enter a number: ");
    scanf("%d", &num);

    original = num;

    // Use do...while to reverse the number
    do {
        digit = num % 10;
        reversed = reversed * 10 + digit;
        num = num / 10;
    } while (num != 0);

    // Check if palindrome
    if (original == reversed)
        printf("%d is a Palindrome Number.\n", original);
    else
        printf("%d is Not a Palindrome Number.\n", original);

    return 0;
}

Q: Fibonnaci Series

#include <stdio.h>

int main() {
    int n, i;
    int a = 0, b = 1, next;

    printf("Enter number of terms: ");
    scanf("%d", &n);

    printf("Fibonacci Series: ");

    for (i = 1; i <= n; i++) {
        printf("%d ", a);
        next = a + b;
        a = b;
        b = next;
    }

    return 0;
} (o\p explanation in WhatsApp)

Q: Count the no.of digits

#include <stdio.h>

int main() {
    int num, count = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    // Special case for 0
    if (num == 0) {
        count = 1;
    } else {
        while (num != 0) {
            num = num / 10;   // Remove last digit
            count++;          // Increment count
        }
    }

    printf("Number of digits = %d\n", count);

    return 0;
}

Q: Armstrong Number:

An Armstrong number of n digits is a number such that the sum of its digits raised to the power n is equal to the number itself.

Example (3-digit):
153 (1^3+5^3+3^3=153)

#include <stdio.h>
#include <math.h>

int main() {
    int num, original, remainder, result = 0, n = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    original = num;

    // Count number of digits (n)
    int temp = num;
    while (temp != 0) {
        temp = temp / 10;
        n++;
    }

    // Calculate sum of digits^n
    temp = num;
    while (temp != 0) {
        remainder = temp % 10;
        result += pow(remainder, n); // raise digit to power n
        temp = temp / 10;
    }

    // Check if Armstrong
    if (result == original)
        printf("%d is an Armstrong Number.\n", original);
    else
        printf("%d is Not an Armstrong Number.\n", original);

    return 0;
}

Q: Sum of Series: 1 + 2 + 3 + ... + N

(using loop)
#include <stdio.h>

int main() {
    int i, n, sum = 0;

    printf("Enter a number (N): ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++) {
        sum = sum + i;  // or sum += i;
    }

    printf("Sum of series = %d\n", sum);
    return 0;
}

(using formula)
#include <stdio.h>

int main() {
    int n, sum;

    printf("Enter a number (N): ");
    scanf("%d", &n);

    sum = n * (n + 1) / 2;

    printf("Sum of series = %d\n", sum);
    return 0;
}

Q: Use continue and break in loops to skip/stop when a condition is met

#include<stdio.h>
int main(){
	int i,j,n,m;
	printf("n value: ");
	scanf("%d",&n);
	
	printf("continue statement\n");
	for(i=0;i<=n;i++){
		if(i==3){
			continue;
		}
		printf("%d\n",i);
	}
	printf("m value: ");
	scanf("%d",&m);
	printf("break statement\n");
	
	for(j=0;j<=n;j++){
		if(j==3){
			break;
		}
		printf("%d\n",j);
	}
	return 0;
}

Q: the Star Pattern

#include <stdio.h>

int main() {
    int i, j, n;

    printf("Enter number of rows: ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++) {         // Rows
        for (j = 1; j <= i; j++) {     // Columns (stars)
            printf("* ");
        }
        printf("\n");                 // Move to next line
    }

    return 0;
}




