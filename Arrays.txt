Q: Write a program to enter price of 3 items & print their final cost with GST.

#include<stdio.h>
int main(){
    float price[3];
    printf("enter 3 prices: ");
    scanf("%f%f%f",&price[0],&price[1],&price[2]);
    printf("final price 1:%.2f\n",price[0]+(0.18*price[0]));
    printf("final price 2:%.2f\n",price[1]+(0.18*price[1]));
    printf("final price 3:%.2f\n",price[2]+(0.18*price[2]));
    
    return 0;
}

Q: Traversal of Array

#include<stdio.h>
int main(){
    int aadhar[5];
    //input
    int *ptr=&aadhar[0];
    for(int i=0;i<5;i++){
        printf("%d index: ",i);
        scanf("%d",&aadhar[i]); //not the address , just for storing purpose
    }
    //output
    for(int i=0;i<5;i++){
        printf("%d index:%d\n",i,aadhar[i]);
    }
    return 0;
}

Q: Implement Array using Functions


#include <stdio.h>

void printArray(int arr[], int n);

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6}; // initial values will be replaced by user input
    int n = 6;

    printf("Enter %d numbers:\n", n);
    printArray(arr, n);  // User will input values into the array

    // Print the updated array
    printf("Updated array values:\n");
    for(int i = 0; i < n; i++) {
        printf("%d\t", arr[i]);
    }

    return 0;
}

// Function to read array elements
void printArray(int arr[], int n) {
    for(int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
}

Q: Write a Function to count the number of odd numbers in an array

#include <stdio.h>

// Function to count odd numbers
int countOdd(int arr[], int n);

int main() {
    int n, i;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    int arr[n];  // Declare array of size n

    // Input elements
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Print entered elements
    printf("Array elements: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    // Count and display odd numbers
    int result = countOdd(arr, n);
    printf("\nTotal odd numbers: %d\n", result);

    return 0;
}

// Function definition
int countOdd(int arr[], int n) {
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 != 0) {
            count++;
        }
    }
    return count;
}

Q: Function to reverse array

#include <stdio.h>

// Function to reverse the array
void reverseArray(int arr[], int n);

int main() {
    int n, i;

    // Input array size
    printf("Enter number of elements: ");
    scanf("%d", &n);

    int arr[n];

    // Input elements
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Print original array
    printf("Original array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    // Reverse the array
    reverseArray(arr, n);

    // Print reversed array
    printf("\nReversed array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    return 0;
}

// Function to reverse the array
void reverseArray(int arr[], int n) {
    int temp;
    for (int i = 0; i < n / 2; i++) {
        temp = arr[i];
        arr[i] = arr[n - i - 1];
        arr[n - i - 1] = temp;
    }
}

Q: Print Fibonacci Series using loops

#include<stdio.h>
int main(){
    int n;
    printf("enter n(n>2): ");
    scanf("%d",&n);
    int fib[n];
    fib[0]=0;
    fib[1]=1;

    for (int i=2;i<n;i++){
        fib[i]=fib[i-1]+fib[i-2];
        printf("%d\t",fib[i]);
}
return 0;
    }

Q: Using multidimensional array, print tables of 2 & 3

#include <stdio.h>

void printTables(int arr[][10], int n, int m, int number);

int main() {
    int arr[2][10]; // Declare a 2x10 array

    // Fill the first row with the table of 2
    printTables(arr, 0, 10, 2);

    // Fill the second row with the table of 3
    printTables(arr, 1, 10, 3);

    // Print the table of 2
    for (int i = 0; i < 10; i++) {
        printf("%d\t", arr[0][i]);
    }
    printf("\n");

    // Print the table of 3
    for (int i = 0; i < 10; i++) {
        printf("%d\t", arr[1][i]);
    }

    return 0;
}

// Function to fill one row of the array with a multiplication table
void printTables(int arr[][10], int n, int m, int number) {
    for (int i = 0; i < m; i++) {
        arr[n][i] = number * (i + 1); // Fix: Proper array indexing
    }
}
